@model List<ExcelParsing.Models.Person>
@{
    ViewData["Title"] = "Home Page";
    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
    int totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
    string currentSort = ViewData["CurrentSort"]?.ToString();
}

@* <div class="text-center"> *@
<h1 class="home">Home</h1>
    
<form asp-controller="ExcelParsing" asp-action="Upload" method="get">
    <button id="upload" type="submit">UPLOAD</button>
</form>

<div class="search-container">
    <form asp-action="Index" method="get" class="search-form">
        <div class="form-group search-group">
            <input type="text" name="name" id="nameInput" class="form-control search-input" placeholder="Search First or Last Name" oninput="toggleInput('statusInput', this)">
            <button type="button" class="btn btn-secondary clear-btn" onclick="clearInput('statusInput','nameInput')">Clear</button>
        </div>

        <div class="form-group search-group">
            <input type="text" name="status" id="statusInput" class="form-control search-input" placeholder="Search by Status" oninput="toggleInput('nameInput', this)">
            <button type="button" class="btn btn-secondary clear-btn" onclick="clearInput('nameInput','statusInput')">Clear</button>
        </div>

        <button type="submit" class="btn search-btn">Search</button>
    </form>
</div>
    
<div id="contents">
        
    <div id="header-container"> 
        <div class="header">
            <a asp-action="Index" asp-route-sortOrder="@ViewData["IDSort"]" class="header-a-tag">ID</a>
        </div>
        <div class="header"> 
            <a asp-action="Index" asp-route-sortOrder="@ViewData["FirstNameSort"]" class="header-a-tag">First Name</a> 
        </div>
        <div class="header"> 
            <a asp-action="Index" asp-route-sortOrder="@ViewData["LastNameSort"]" class="header-a-tag">Last Name</a> 
        </div>
        <div class="header"> 
            <a asp-action="Index" asp-route-sortOrder="@ViewData["AgeSort"]" class="header-a-tag">Age</a> 
        </div>
        <div class="header"> 
            <a asp-action="Index" asp-route-sortOrder="@ViewData["StatusSort"]" class="header-a-tag">Status</a> 
        </div>
    </div>

    @foreach(var person in Model)
    {
        <div id="cell-container">
            <div class="cell">@person.ID</div>
            <div class="cell">@person.FirstName</div>
            <div class="cell">@person.LastName</div>
            <div class="cell">@person.Age</div>
            <div class="cell">@person.status</div>
        </div>
    }
</div>

<form id="paginationForm" method="get" asp-action="Index">
    <input type="hidden" name="sortOrder" value="@ViewData["CurrentSort"]" />
    <input type="hidden" name="page" id="pageInput" value="@currentPage" />
    <div id="pagination">
        @if (totalPages > 1)
        {
            @for (int i = 1; i <= totalPages; i++)
            {
                <button class="page-buttons" onclick="setPage(@i)">@i</button>
            }
        }
        else
        {
            <button class="page-buttons" type="button" aria-hidden="true">1</button>
        }
    </div>
</form>
    
<div>
    <input type="hidden" name="sortOrder" value="@ViewData["CurrentSort"]" />
    <button class="prev-next-buttons" onclick="prevPage()">Previous</button>
    <button class="prev-next-buttons" onclick="nextPage()">Next</button>
</div>

@section Scripts {
    <script>
        function setPage(page) {
            document.getElementById("pageInput").value = page;
            document.getElementById("paginationForm").submit();
        }

        function prevPage() {
            let currentPage = @currentPage;
            if (currentPage > 1) {
                setPage(currentPage - 1);
            }
        }

        function nextPage() {
            let currentPage = @currentPage;
            let totalPages = @totalPages;
            if (currentPage < totalPages) {
                setPage(currentPage + 1);
            }
        }
    </script>
}

@* </div> *@